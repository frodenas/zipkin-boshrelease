; Licensed to the Apache Software Foundation (ASF) under one
; or more contributor license agreements.  See the NOTICE file
; distributed with this work for additional information
; regarding copyright ownership.  The ASF licenses this file
; to you under the Apache License, Version 2.0 (the
; "License"); you may not use this file except in compliance
; with the License.  You may obtain a copy of the License at
;
;   http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing,
; software distributed under the License is distributed on an
; "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
; KIND, either express or implied.  See the License for the
; specific language governing permissions and limitations
; under the License.
;
; Sample ~/.cqlshrc file.

<%
def openstruct_to_hash(os)
  os.marshal_dump.map do |key, element|
    element.is_a?(OpenStruct) ? { key => openstruct_to_hash(element) } : { key => element }
  end.reduce(&:merge)
end

networks = openstruct_to_hash(spec.networks)
default_network = networks.values.find { |net| net.has_key?(:default) }
private_ip = default_network[:ip]

vip_network = networks.values.find { |net| net[:type] == 'vip' }
public_ip = vip_network.nil? ? private_ip : vip_network[:ip]
%>

[authentication]
;username = fred
;password = !!bang!!$

[ui]
color = off
completekey = tab

[cql]
version = 3.2.0

[connection]
hostname = <%= private_ip %>
port = <%= p('cassandra.cql_port') %>

[tracing]
max_trace_wait = 10.0

;[ssl]
;certfile = ~/keys/cassandra.cert
;; optional - true by default.
;validate = true
;; to be provided when require_client_auth=true
;userkey = ~/key.pem
;; to be provided when require_client_auth=true
;usercert = ~/cert.pem

;; optional section, overrides default certfile in [ssl] section, if present
;[certfiles]
;192.168.1.3 = ~/keys/cassandra01.cert
;192.168.1.4 = ~/keys/cassandra02.cert

; vim: set ft=dosini :

